version: "3.8"
services:
  db:
    image: postgres
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - local_pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    depends_on:
      - db
    ports:
      - "5050:5050"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      PGADMIN_LISTEN_PORT: 5050
    volumes:
      - pgadmin-data:/var/lib/pgadmin

# FOR JENKINS SETUP
# docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: unless-stopped
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    environment:
      JENKINS_ADMIN_PASSWORD: admin
    volumes:
      - jenkins_data:/var/lib/jenkins/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker

  mongo_db:
    image: mongo
    container_name: mongo_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    container_name: mongo-admin
    restart: always
    depends_on:
      - mongo_db
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo_db
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8081:8081"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # JVM heap size - optional
    ports:
      - "9200:9200"
    networks:
      - elk-network
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - elk-network

  loggerservice:
    build:
      context: ./loggerservice
      dockerfile: loggerservice.dockerfile
    container_name: loggerservice
    restart: always
    ports:
      - "3003:3003"
    depends_on:
      - mongo_db

  userservice:
    build:
      context: ./userservice
      dockerfile: userservice.dockerfile
    container_name: userservice
    restart: always
    ports:
      - "3001:3001"

  mailerservice:
    build:
      context: ./mailerservice
      dockerfile: mailerservice.dockerfile
    container_name: mailerservice
    restart: always
    ports:
      - "3002:3002"

  cronitor:
    build:
      context: ./cronitor
      dockerfile: cronitor.dockerfile
    container_name: cronitor
    restart: always


networks:
    elk-network:
        driver: bridge

volumes:
  local_pgdata:
  pgadmin-data:
  jenkins_data:
  mongo-data:
  elasticsearch-data:
